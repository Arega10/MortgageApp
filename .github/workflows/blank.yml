import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

def calculate_monthly_payment(principal, rate, years):
    monthly_rate = rate / 100 / 12
    months = years * 12
    if monthly_rate == 0:
        return principal / months
    return principal * (monthly_rate * (1 + monthly_rate) ** months) / ((1 + monthly_rate) ** months - 1)

def calculate_adjusted_monthly_payment(principal, rate, years, variable_rate_change, early_payment, inflation):
    adjusted_payments = []
    balance = principal
    for month in range(1, years * 12 + 1):
        if variable_rate_change and month in variable_rate_change:
            rate = variable_rate_change[month]
        monthly_payment = calculate_monthly_payment(balance, rate, years - (month // 12))
        if early_payment > 0 and month % 12 == 0:
            balance -= early_payment
        balance *= (1 + inflation / 100 / 12)  # הצמדה למדד
        adjusted_payments.append(monthly_payment)
    return np.mean(adjusted_payments)

def main():
    st.title("תמהיל משכנתא - אפליקציה אינטרנטית")
    
    st.sidebar.header("הזן נתונים")
    st.sidebar.write("**טווח מומלץ למשכנתא: 200,000 - 2,500,000 ₪**")
    total_loan = st.sidebar.number_input("סכום המשכנתא (₪)", min_value=50000, max_value=5000000, step=50000, value=1000000)
    num_components = st.sidebar.number_input("מספר מסלולים", min_value=1, max_value=5, step=1, value=3)
    
    st.write("### פירוט מסלולים")
    data = []
    
    for i in range(num_components):
        st.subheader(f"מסלול {i+1}")
        amount = st.number_input(f"סכום (₪) - מסלול {i+1}", min_value=0, max_value=total_loan, step=10000, value=total_loan // num_components, key=f"amount_{i}")
        rate = st.number_input(f"ריבית שנתית (%) - מסלול {i+1}", min_value=0.0, max_value=10.0, step=0.1, value=3.0, key=f"rate_{i}")
        years = st.number_input(f"משך שנים - מסלול {i+1}", min_value=5, max_value=30, step=1, value=20, key=f"years_{i}")
        early_payment = st.number_input(f"תשלום מוקדם שנתי (₪) - מסלול {i+1}", min_value=0, max_value=total_loan, step=5000, value=0, key=f"early_{i}")
        inflation = st.number_input(f"שיעור הצמדה למדד (%) - מסלול {i+1}", min_value=0.0, max_value=5.0, step=0.1, value=0.0, key=f"inflation_{i}")
        variable_rate_change = {}
        change_rate = st.checkbox(f"ריבית משתנה במהלך התקופה - מסלול {i+1}")
        if change_rate:
            for j in range(5, years + 1, 5):
                new_rate = st.number_input(f"ריבית לאחר {j} שנים (%) - מסלול {i+1}", min_value=0.0, max_value=10.0, step=0.1, value=rate, key=f"var_rate_{i}_{j}")
                variable_rate_change[j * 12] = new_rate
        data.append((amount, rate, years, variable_rate_change, early_payment, inflation))
    
    st.write("### סיכום תמהיל המשכנתא")
    df = pd.DataFrame(data, columns=["סכום (₪)", "ריבית שנתית (%)", "משך (שנים)", "שינויי ריבית", "תשלום מוקדם", "שיעור הצמדה למדד"])
    df = df[df["סכום (₪)"] > 0]  # סינון ערכים אפסיים או ריקים
    
    if df.empty:
        st.warning("⚠️ כל הנתונים סוננו. ודא שהזנת ערכים נכונים עבור כל המסלולים.")
        return
    
    df["תשלום חודשי (₪)"] = df.apply(lambda row: calculate_adjusted_monthly_payment(row["סכום (₪)"], row["ריבית שנתית (%)"], row["משך (שנים)"], row["שינויי ריבית"], row["תשלום מוקדם"], row["שיעור הצמדה למדד"]), axis=1)
    df["סה""כ תשלומים (₪)"] = df["תשלום חודשי (₪)"] * df["משך (שנים)"] * 12
    st.dataframe(df)
    
    total_monthly_payment = df["תשלום חודשי (₪)"].sum()
    total_payments = df["סה""כ תשלומים (₪)"].sum()
    st.write(f"### סך התשלום החודשי: {total_monthly_payment:,.2f} ₪")
    st.write(f"### סך הכל תשלומים לכל התקופה: {total_payments:,.2f} ₪")
    
    fig, ax = plt.subplots()
    labels = [f"מסלול {i+1}" for i in range(len(df))]
    sizes = df["סה""כ תשלומים (₪)"].values
    ax.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=140)
    ax.axis('equal')
    st.pyplot(fig)

if __name__ == "__main__":
    main()
